name: Build

on:
  push:
    branches:
      - master
      - rvv-next_zfh
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:     [ubuntu-20.04, ubuntu-22.04]
        mode:   [linux]
        target: [rv64gcv, rv64gcv_zfh]
#        exclude:
#          - mode: musl
#            target: rv32gc-ilp32d
    steps:
      - uses: actions/checkout@v2

#          git submodule init
#          git submodule update --recursive --progress --recommend-shallow
      - name: initialize submodules
        run: |
          git submodule update --init --recursive --depth 1 glibc
          git submodule update --init --recursive --depth 1 riscv-dejagnu
          git submodule update --init --recursive --depth 1 newlib
          git submodule update --init --recursive --depth 1 riscv-gdb
          git submodule update --init --recursive --depth 1 riscv-binutils
          git submodule update --init --recursive --depth 1 riscv-gcc

#      - name: mainline changes
#        run: | 
#         rm -r -f riscv-binutils
#         git clone -b master git://sourceware.org/git/binutils-gdb.git riscv-binutils 
#         pushd riscv-binutils
#         popd
#         rm -r -f riscv-gcc
#         git clone --depth 1 -b riscv-gcc-rvv-next https://github.com/riscv-collab/riscv-gcc.git riscv-gcc
#

      - name: install dependencies
        run: sudo ./.github/setup-apt.sh
      
      - name: disable OBSOLETE_MATH in newlib
        run: sed -i '/__OBSOLETE_MATH/d' newlib/newlib/libm/common/math_errf.c


#          TARGET_TUPLE=($(echo ${{ matrix.target }} | tr "-" "\n"))
#          ./configure --prefix=/opt/riscv --with-arch=${TARGET_TUPLE[0]} --with-abi=${TARGET_TUPLE[1]}
      - name: build toolchain
        run: |
          ./configure --prefix=/opt/riscv --with-arch=${{ matrix.target }}
          sudo make -j $(nproc) ${{ matrix.mode }}

      - name: tarball build
        run: tar czvf riscv.tar.gz -C /opt/ riscv/

      - name: generate prebuilt toolchain name
        id:   toolchain-name-generator
        run: |
          if [[ "${{ matrix.target }}" == *"32"* ]]; then BITS=32; else BITS=64; fi
          case "${{ matrix.mode }}" in
            "linux")
              MODE="glibc";;
            "musl")
              MODE="musl";;
            *)
              MODE="elf";;
          esac
          echo ::set-output name=TOOLCHAIN_NAME::riscv$BITS-${{ matrix.target }}-$MODE-${{ matrix.os }}-nightly

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.toolchain-name-generator.outputs.TOOLCHAIN_NAME }}
          path: riscv.tar.gz
